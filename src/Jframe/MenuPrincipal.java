package Jframe;

import Model.Administrador;
import Model.Cliente;
import Util.Functions;
import DAO.eSportBettingDAO;
import javax.swing.JOptionPane;

public class MenuPrincipal extends javax.swing.JFrame {

    float saldoNovo = 0;
    String usuario;

    ApostaDoDiaRocketLeague frameRocketLeague = new ApostaDoDiaRocketLeague();

    public MenuPrincipal() {
        initComponents();
        setLocationRelativeTo(this);
        jmiGerarRelatorioTodosUsuarios.setVisible(false);
        jmCadastros.setVisible(false);
        Functions.getInstance().createDirRelatorio();
    }

    /**
     * Método responsável por ativar privilégio de admin caso seja feito login
     * pelo mesmo na tela de login.
     */
    public void ativaPrivilegiosAdministrador() {
        jmiGerarRelatorioTodosUsuarios.setVisible(true);
        jmCadastros.setVisible(true);
    }

    /**
     * Metódo utilizado pelo JFrame "TelaLogin", responsável por carregar um
     * tipo Cliente ou Admin, com base no escolhido no mesmo, carregando os
     * dados do banco de dados.
     *
     * @param cliente Caso seja selecionado o login de Cliente, esse parâmetro
     * será preenchido.
     * @param admin Caso seja selecionado o login de Admin, esse parâmetro será
     * preenchido.
     *
     */
    public void carregarDadosUsuarioMenuPrincipal(Cliente cliente, Administrador admin) {
        if (cliente != null) {
            jmUsuario.setText(cliente.getNome());
            jmSaldoAtual.setText("R$" + cliente.getSaldo());
            usuario = cliente.getUsuario();
            jmCadastros.setVisible(false);

        } else {
            jmUsuario.setText(admin.getNome());
            ativaPrivilegiosAdministrador();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jmiRocketLeague = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jmiAdicionarFundos = new javax.swing.JMenuItem();
        jmiAtualizar2 = new javax.swing.JMenuItem();
        jmiDeslogar = new javax.swing.JMenuItem();
        jmUsuario = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jmiAtualizar = new javax.swing.JMenuItem();
        jmSaldoAtual = new javax.swing.JMenu();
        jmCadastros = new javax.swing.JMenu();
        jmiCadCliente = new javax.swing.JMenuItem();
        jmiCadAdmin = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jmiGerarRelatorioUsuario = new javax.swing.JMenuItem();
        jmiGerarRelatorioTodosUsuarios = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("eSportingBetting");
        setResizable(false);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/ROCKET-LEAGUE-DESTACADA-1-900x503.jpg"))); // NOI18N

        jDesktopPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 875, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jMenu2.setText("Apostas");

        jmiRocketLeague.setText("Rocket League");
        jmiRocketLeague.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRocketLeagueActionPerformed(evt);
            }
        });
        jMenu2.add(jmiRocketLeague);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Opções");

        jmiAdicionarFundos.setText("Adicionar Dinheiros");
        jmiAdicionarFundos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAdicionarFundosActionPerformed(evt);
            }
        });
        jMenu3.add(jmiAdicionarFundos);

        jmiAtualizar2.setText("Atualizar Dinheiros");
        jmiAtualizar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAtualizar2ActionPerformed(evt);
            }
        });
        jMenu3.add(jmiAtualizar2);

        jmiDeslogar.setText("Deslogar");
        jmiDeslogar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiDeslogarActionPerformed(evt);
            }
        });
        jMenu3.add(jmiDeslogar);

        jMenuBar1.add(jMenu3);

        jmUsuario.setText("nomeusuario");
        jMenuBar1.add(jmUsuario);

        jMenu4.setText("Dinheiros:");

        jmiAtualizar.setText("Atualizar Dinheiros");
        jmiAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAtualizarActionPerformed(evt);
            }
        });
        jMenu4.add(jmiAtualizar);

        jMenuBar1.add(jMenu4);

        jmSaldoAtual.setText("5");
        jMenuBar1.add(jmSaldoAtual);

        jmCadastros.setText("Cadastros");

        jmiCadCliente.setText("Cadastro de Cliente");
        jmiCadCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCadClienteActionPerformed(evt);
            }
        });
        jmCadastros.add(jmiCadCliente);

        jmiCadAdmin.setText("Cadastro de Admin");
        jmiCadAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCadAdminActionPerformed(evt);
            }
        });
        jmCadastros.add(jmiCadAdmin);

        jMenuBar1.add(jmCadastros);

        jMenu1.setText("Relatórios");

        jmiGerarRelatorioUsuario.setText("Gerar relatório geral de apostas e depósitos do usuário");
        jmiGerarRelatorioUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiGerarRelatorioUsuarioActionPerformed(evt);
            }
        });
        jMenu1.add(jmiGerarRelatorioUsuario);

        jmiGerarRelatorioTodosUsuarios.setText("Gerar relatório de todos os usuários (ADM)");
        jmiGerarRelatorioTodosUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiGerarRelatorioTodosUsuariosActionPerformed(evt);
            }
        });
        jMenu1.add(jmiGerarRelatorioTodosUsuarios);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmiCadClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCadClienteActionPerformed
        CadastroCliente cadCliente = new CadastroCliente();
        cadCliente.setVisible(true);
    }//GEN-LAST:event_jmiCadClienteActionPerformed

    /**
     * Método responsável por gerar um novo JFrame com a cadastrar um novo
     * usuário (EXCLUSIVO PARA ADM) fundos para a conta do usuário.
     */
    private void jmiCadAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCadAdminActionPerformed
        String comparador = JOptionPane.showInputDialog("Digite o código secreto para se cadastrar como admin... (Psiu, o código é: deusnato)");

        if (comparador.equalsIgnoreCase("deusnato")) {
            CadastroAdmin cadAdmin = new CadastroAdmin();
            cadAdmin.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(this, "ERROOOOOOOOU!");
        }
    }//GEN-LAST:event_jmiCadAdminActionPerformed

    /**
     * Todos os parâmetros do JFrame "ApostaRocketLeague" será inicializado por
     * aqui, carregando dados de saldo do cliente.
     */
    private void jmiRocketLeagueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiRocketLeagueActionPerformed
        frameRocketLeague = new ApostaDoDiaRocketLeague();
        frameRocketLeague.setVisible(true);
        frameRocketLeague.iniciarFuncionalidades();

        float saldoCliente = eSportBettingDAO.getInstance().retornaSaldoCliente(usuario);

        if (saldoCliente > 0) {
            frameRocketLeague.setaSaldoAtual(saldoCliente);

        } else {
            frameRocketLeague.setaSaldoAtual(0);

        }
        frameRocketLeague.setaUsuarioAtual(usuario);

    }//GEN-LAST:event_jmiRocketLeagueActionPerformed

    /**
     * Método responsável por gerar um novo JFrame com a finalidade de adicionar
     * fundos para a conta do usuário.
     */
    private void jmiAdicionarFundosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAdicionarFundosActionPerformed
        AdicionarFundos frameAdicionarFundos = new AdicionarFundos();
        frameAdicionarFundos.setVisible(true);
        frameAdicionarFundos.setUsuario(usuario);
    }//GEN-LAST:event_jmiAdicionarFundosActionPerformed

    /**
     * Método responsável por atualizar o saldo no menu principal.
     */
    private void jmiAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAtualizarActionPerformed
        saldoNovo = eSportBettingDAO.getInstance().retornaSaldoCliente(usuario);
        jmSaldoAtual.setText("R$" + saldoNovo);
    }//GEN-LAST:event_jmiAtualizarActionPerformed

    /**
     * Método responsável por deslogar o usuário atual.
     */
    private void jmiDeslogarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiDeslogarActionPerformed
        dispose();
        TelaLogin frameLogin = new TelaLogin();
        frameLogin.setVisible(true);
    }//GEN-LAST:event_jmiDeslogarActionPerformed

    /**
     * Método responsável por atualizar o saldo no menu principal.
     */
    private void jmiAtualizar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAtualizar2ActionPerformed
        saldoNovo = eSportBettingDAO.getInstance().retornaSaldoCliente(usuario);
        jmSaldoAtual.setText("R$" + saldoNovo);
    }//GEN-LAST:event_jmiAtualizar2ActionPerformed

    /**
     * Método responsável por gerar um relatório do usuário atual que está
     * logado.
     */
    private void jmiGerarRelatorioUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiGerarRelatorioUsuarioActionPerformed
        Functions.getInstance().generatePDFCliente(usuario);
    }//GEN-LAST:event_jmiGerarRelatorioUsuarioActionPerformed

    /**
     * Método responsável por gerar um relatório geral de todos os clientes.
     * (EXCLUSIVO PARA ADM)
     */
    private void jmiGerarRelatorioTodosUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiGerarRelatorioTodosUsuariosActionPerformed
        Functions.getInstance().generatePDFCliente("");
    }//GEN-LAST:event_jmiGerarRelatorioTodosUsuariosActionPerformed

    /**
     * Muda o nome do usuário no menu para o que foi cadastrado.
     */
    public void mudaNomeUsuario(String usuario) {
        jmUsuario.setText(usuario);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenu jmCadastros;
    private javax.swing.JMenu jmSaldoAtual;
    private javax.swing.JMenu jmUsuario;
    private javax.swing.JMenuItem jmiAdicionarFundos;
    private javax.swing.JMenuItem jmiAtualizar;
    private javax.swing.JMenuItem jmiAtualizar2;
    private javax.swing.JMenuItem jmiCadAdmin;
    private javax.swing.JMenuItem jmiCadCliente;
    private javax.swing.JMenuItem jmiDeslogar;
    private javax.swing.JMenuItem jmiGerarRelatorioTodosUsuarios;
    private javax.swing.JMenuItem jmiGerarRelatorioUsuario;
    private javax.swing.JMenuItem jmiRocketLeague;
    // End of variables declaration//GEN-END:variables
}
